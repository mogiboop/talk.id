"""
Django settings for app_comm project.

Generated by 'django-admin startproject' using Django 4.2.11.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
from decouple import config, Csv
from django.utils.translation import gettext_lazy as _
import dj_database_url

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
PWA_SERVICE_WORKER_PATH = os.path.join(BASE_DIR, 'app_comm_api', 'static','js', 'serviceworker.js')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

SECRET_KEY = config('SECRET_KEY')
DEBUG = config('DEBUG', default=True, cast=bool)
ALLOWED_HOSTS = config('DJANGO_ALLOWED_HOSTS', default='localhost', cast=Csv())
CSRF_TRUSTED_ORIGINS = config('CSRF_TRUSTED_ORIGINS', default='', cast=Csv())
CORS_ALLOWED_ORIGINS = config('DJANGO_CORS_ALLOWED_ORIGINS', default='https://talkid.onrender.com, http://localhost:8000', cast=Csv())

INSTALLED_APPS = [
    'daphne',
    'app_comm_api.apps.AppCommApiConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'channels',
    'channels_redis',
    'rest_framework',
    'rest_framework.authtoken',
    'pwa',
]

PWA_APP_NAME = 'TalkID Web App'
PWA_APP_DESCRIPTION = "TalkID app"
PWA_APP_THEME_COLOR = '#ffffff' 
PWA_APP_BACKGROUND_COLOR = '#f5e9d0' 
PWA_APP_DISPLAY = 'standalone'
PWA_APP_SCOPE = '/'
PWA_APP_ORIENTATION = 'any'
PWA_APP_START_URL = '/'
PWA_APP_STATUS_BAR_COLOR = 'default'
PWA_APP_DEBUG_MODE = False
PWA_APP_ICONS = [
    {
        'src': '/static/images/logo_website-48x48.png',
        'sizes': '48x48',
        'type' : 'image/png'
    },
    {
        'src': '/static/images/logo_website-72x72.png',
        'sizes': '72x72',
        'type' : 'image/png'
    },
    {
        'src': '/static/images/logo_website-96x96.png',
        'sizes': '96x96',
        'type' : 'image/png'
    },
    {
        'src': '/static/images/logo_website-144x144.png',
        'sizes': '144x144',
        'type' : 'image/png'
    },
    {
        'src': '/static/images/logo_website-192x192.png',
        'sizes': '192x192',
        'type' : 'image/png'
    }
]
PWA_APP_ICONS_APPLE = [
    {
        'src': '/static/images/logo_website-120x120.png',
        'sizes': '120x120',
        'type' : 'image/png'
    },
    {
        'src': '/static/images/logo_website-152x152.png',
        'sizes': '152x152',
        'type' : 'image/png'
    },
    {
        'src': '/static/images/logo_website-167x167.png',
        'sizes': '167x167',
        'type' : 'image/png'
    },
    {
        'src': '/static/images/logo_website-180x180.png',
        'sizes': '180x180',
        'type' : 'image/png'
    },
    {
        'src': '/static/images/logo_website-1024x1024.png',
        'sizes': '1024x1024',
        'type' : 'image/png'
    }
]
PWA_APP_DIR = 'ltr'
PWA_APP_LANG = 'en-US'



WEBPUSH_SETTINGS = {
    "VAPID_PUBLIC_KEY": config('WEB_PUSH_VAPID_PUB_KEY'),
    "VAPID_PRIVATE_KEY": config('WEB_PUSH_VAPID_PRIV_KEY'),
    "VAPID_ADMIN_EMAIL": config('WEB_PUSH_VAPID_ADMIN_EMAIL')
}


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',  
        'rest_framework.authentication.TokenAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
}



MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',  
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'app_comm.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR.joinpath('/talk.id/app_comm/app_comm_api/templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'app_comm.wsgi.application'
ASGI_APPLICATION = 'app_comm.asgi.application'

REDIS_URL = config('REDIS_URL')
# Channel layer configuration
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [(REDIS_URL)],
        },
    },
}

#CHANNEL_LAYERS = {
#    'default': {
#        'BACKEND': 'channels_redis.core.RedisChannelLayer', 
#        'CONFIG': {
#            "hosts": [(config('REDIS_HOST', '127.0.0.1'), config('REDIS_PORT', 6379, cast=int))],
#        },
#    },
#}

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = { 
    'default': dj_database_url.parse(config('DATABASE_URL'))       
}

#DATABASES = { 
#    'default': {
#        'ENGINE': 'django.db.backends.postgresql',
#        "NAME": config('POSTGRES_DB_NAME'),
#        "USER": config('POSTGRES_USER'),
#        "PASSWORD": config('POSTGRES_PASSWORD'),
#        "HOST": config('POSTGRES_HOST'),
#        "PORT": config('POSTGRES_PORT'),
#        'OPTIONS': {
#            'options': '-c timezone=Europe/Lisbon',
#        },
#    }
#}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Europe/Lisbon'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/


# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Static files (CSS, JavaScript, Images)
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'app_comm_api', 'static'),
]
STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"

# Additional security settings
CSRF_COOKIE_SECURE = True
SESSION_COOKIE_SECURE = True
#SECURE_BROWSER_XSS_FILTER = True
#SECURE_CONTENT_TYPE_NOSNIFF = True
SECURE_SSL_REDIRECT = config('DJANGO_SECURE_SSL_REDIRECT', default=False, cast=bool)
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')




###LOCALHOST###
# """
# Django settings for app_comm project.

# Generated by 'django-admin startproject' using Django 4.2.11.

# For more information on this file, see
# https://docs.djangoproject.com/en/4.2/topics/settings/

# For the full list of settings and their values, see
# https://docs.djangoproject.com/en/4.2/ref/settings/
# """

# from pathlib import Path
# import os
# from decouple import config, Csv
# from django.utils.translation import gettext_lazy as _

# # Build paths inside the project like this: BASE_DIR / 'subdir'.
# BASE_DIR = Path(__file__).resolve().parent.parent
# PWA_SERVICE_WORKER_PATH = os.path.join(BASE_DIR, 'app_comm_api', 'static','js', 'serviceworker.js')

# # Quick-start development settings - unsuitable for production
# # See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECRET_KEY = config('SECRET_KEY')
# #TODO: change default to false
# DEBUG = config('DEBUG', default=True, cast=bool)
# #Parse ALLOWED_HOSTS from a comma-separated string to a list
# ALLOWED_HOSTS = config('DJANGO_ALLOWED_HOSTS', default='localhost', cast=Csv())

# INSTALLED_APPS = [
#     'daphne',
#     'app_comm_api.apps.AppCommApiConfig',
#     'django.contrib.admin',
#     'django.contrib.auth',
#     'django.contrib.contenttypes',
#     'django.contrib.sessions',
#     'django.contrib.messages',
#     'django.contrib.staticfiles',
#     'channels',
#     'channels_redis',
#     'rest_framework',
#     'rest_framework.authtoken',
#     'pwa',
# ]

# PWA_APP_NAME = 'TalkID'
# PWA_APP_DESCRIPTION = "TalkID app"
# PWA_APP_THEME_COLOR = '#ffffff' 
# PWA_APP_BACKGROUND_COLOR = '#f5e9d0' 
# PWA_APP_DISPLAY = 'standalone'
# PWA_APP_SCOPE = '/'
# PWA_APP_ORIENTATION = 'any'
# PWA_APP_START_URL = '/'
# PWA_APP_STATUS_BAR_COLOR = 'default'
# PWA_APP_DEBUG_MODE = False
# PWA_APP_ICONS = [
#     {
#         'src': '/static/images/logo_website-192x192.png',
#         'sizes': '192x192',
#         'type' : 'image/png'
#     }
# ]
# PWA_APP_ICONS_APPLE = [
#     {
#         'src': '/static/images/logo_website-192x192.png',
#         'sizes': '192x192',
#         'type' : 'image/png'
#     }
# ]
# PWA_APP_DIR = 'ltr'
# PWA_APP_LANG = 'en-US'



# WEBPUSH_SETTINGS = {
#     "VAPID_PUBLIC_KEY": config('WEB_PUSH_VAPID_PUB_KEY'),
#     "VAPID_PRIVATE_KEY": config('WEB_PUSH_VAPID_PRIV_KEY'),
#     "VAPID_ADMIN_EMAIL": config('WEB_PUSH_VAPID_ADMIN_EMAIL')
# }


# REST_FRAMEWORK = {
#     'DEFAULT_AUTHENTICATION_CLASSES': [
#         'rest_framework.authentication.SessionAuthentication',  
#         'rest_framework.authentication.TokenAuthentication',
#     ],
#     'DEFAULT_PERMISSION_CLASSES': [
#         'rest_framework.permissions.IsAuthenticated',
#     ],
# }



# MIDDLEWARE = [
#     'django.middleware.security.SecurityMiddleware',
#     'django.contrib.sessions.middleware.SessionMiddleware',
#     'django.middleware.locale.LocaleMiddleware',  
#     'django.middleware.common.CommonMiddleware',
#     'django.middleware.csrf.CsrfViewMiddleware',
#     'django.contrib.auth.middleware.AuthenticationMiddleware',
#     'django.contrib.messages.middleware.MessageMiddleware',
#     'django.middleware.clickjacking.XFrameOptionsMiddleware',
# ]

# ROOT_URLCONF = 'app_comm.urls'

# TEMPLATES = [
#     {
#         'BACKEND': 'django.template.backends.django.DjangoTemplates',
#         'DIRS': [BASE_DIR.joinpath('/talk.id/app_comm/app_comm_api/templates')],
#         'APP_DIRS': True,
#         'OPTIONS': {
#             'context_processors': [
#                 'django.template.context_processors.debug',
#                 'django.template.context_processors.request',
#                 'django.contrib.auth.context_processors.auth',
#                 'django.contrib.messages.context_processors.messages',
#             ],
#         },
#     },
# ]

# WSGI_APPLICATION = 'app_comm.wsgi.application'
# ASGI_APPLICATION = 'app_comm.asgi.application'
# CHANNEL_LAYERS = {
#     'default': {
#         'BACKEND': 'channels_redis.core.RedisChannelLayer', 
#         'CONFIG': {
#             "hosts": [(config('REDIS_HOST', '127.0.0.1'), config('REDIS_PORT', 6379, cast=int))],
#         },
#     },
# }

# # Database
# # https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# DATABASES = { 
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         "NAME": config('POSTGRES_DB_NAME'),
#         "USER": config('POSTGRES_USER'),
#         "PASSWORD": config('POSTGRES_PASSWORD'),
#         "HOST": config('POSTGRES_HOST'),
#         "PORT": config('POSTGRES_PORT'),
#         'OPTIONS': {
#             'options': '-c timezone=Europe/Lisbon',
#         },
#     }
# }


# # Password validation
# # https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

# AUTH_PASSWORD_VALIDATORS = [
#     {
#         'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
#     },
# ]


# # Internationalization
# # https://docs.djangoproject.com/en/4.2/topics/i18n/

# LANGUAGE_CODE = 'en-us'

# TIME_ZONE = 'Europe/Lisbon'

# USE_I18N = True

# USE_L10N = True

# USE_TZ = True

# # Static files (CSS, JavaScript, Images)
# # https://docs.djangoproject.com/en/4.2/howto/static-files/


# # Default primary key field type
# # https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

# DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# # Static files (CSS, JavaScript, Images)
# STATIC_URL = '/static/'
# STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
# STATICFILES_DIRS = [
#     os.path.join(BASE_DIR, 'app_comm_api', 'static'),
# ]

# # Additional security settings
# #CSRF_COOKIE_SECURE = True
# #SESSION_COOKIE_SECURE = True
# #SECURE_BROWSER_XSS_FILTER = True
# #SECURE_CONTENT_TYPE_NOSNIFF = True
# #SECURE_SSL_REDIRECT = config('DJANGO_SECURE_SSL_REDIRECT', default=False, cast=bool)